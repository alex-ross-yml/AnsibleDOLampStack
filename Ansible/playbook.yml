---
- hosts: digitalocean

  vars:
    asnible_python_interpreter: /usr/bin/python
    do_token: 70f9240a55313b878e474a1a610a1b969e59987e900800f13c3e33a733da0469

  tasks:
  - name: Get digital ocean ssh key
    user: >
      name={{ ansible_user_id }}
      generate_ssh_key=yes
      ssh_key_file=.ssh/id_rsa

  - name: 
    digital_ocean: >
      state=present
      command=ssh
      name=id.rsa.pub
      ssh_pub_key={{ lookup('file', '~/.ssh/id_rsa.pub') }}
      api_token={{ do_token }}
    register: my_ssh_key

  - name: Creating droplets1
    digital_ocean_droplet:
      oauth_token: "{{ do_token }}"
      unique_name: yes
      region: nyc1
      image: centos-7-x64
      wait_timeout: 500
      name: ARoss-2010-WordPress1
      size_id: 512mb
      ipv6: yes
      state: present
      ssh_keys: "{{ my_ssh_key.ssh_key.id }}"
      wait: yes
    register: created_droplets

  - name: save IP and Hostname to local hosts file /etc/hosts
    add_host:
      name: "{{ created_droplets.data.ip_address }}"
      group: do_serv

  - name: Creating droplets
    digital_ocean_droplet:
      oauth_token: "{{ do_token }}"
      unique_name: yes
      region: nyc1
      image: centos-7-x64
      wait_timeout: 500
      name: ARoss-2010-WordPress2
      size_id: 512mb
      ipv6: yes
      state: present
      ssh_keys: "{{ my_ssh_key.ssh_key.id }}"
      wait: yes
    register: created_droplets

  - name: save IP and Hostname to local hosts file /etc/hosts
    add_host: 
      name: "{{ created_droplets.data.ip_address }}"
      group: do_serv
    
  - pause:
      seconds: 40

- hosts: do_serv
  vars:
    wp_mysql_db: wordpress
    wp_mysql_user: user
    wp_mysql_password: Fullsail1!    

  tasks:
  - name: disable selinux
    selinux:
      state: disabled

  - name: restart droplets
    shell: sleep 2 && shutdown -r now "Ansible boot"
    async: 1
    poll: 0
    ignore_errors: true

  - name: waiting for droplets
    local_action:
      module: wait_for
        host={{ inventory_hostname }}
        port=22
        delay=15
        timeout=300

#  - name: force update
#    yum:
#      name:  '*'
#      state: latest

  - name: install prerequisites
    yum: name={{ item }} state=present
    with_items:
      - yum-utils
      - epel-release
      - firewalld
      - http://rpms.remirepo.net/enterprise/remi-release-7.rpm
      - nano

  - name: enable remi 7.3 repo
    shell: yum-config-manager --enable remi-php73

  - name: update cache
    yum: update_cache=yes
    become: yes

  - name: install php packages
    yum: pkg={{ item }} state=latest
    with_items:
      - php
      - php-common
      - php-mysql
      - php-cli
      - php-curl
      - php-gd

  - name: install httpd and mariadb
    yum: pkg={{ item }}  state=latest
    with_items:
      - httpd
      - mariadb
      - mariadb-server
      - MySQL-python

  - name: start httpd
    service: name=httpd state=started enabled=yes

  - name: start mariadb
    service: name=mariadb state=started enabled=yes

  - name: copy php file 
    shell: echo "<?php phpinfo (); ?>" > /var/www/html/info.php

  - name: open 80
    firewalld:
      port: 80/tcp
      permanent: yes
      state: enabled

  - name: reboot firewalld
    service:
      name: firewalld
      state: restarted

  - name: reboot httpd
    service:
      name: httpd
      state: restarted

  - name: creat db user
    mysql_user:
      login_user: root
      login_password:
      name: "{{ wp_mysql_user }}"
      password: "{{ wp_mysql_password }}"
      priv: '*.*:ALL'

  - name: create db
    mysql_db:
      name: "{{ wp_mysql_db }}"
      state: present

  - name: get wordpress
    get_url:
      url: https://wordpress.org/latest.tar.gz
      dest: /tmp/wordpress.tar.gz
      validate_certs: no

  - name: unzip wordpress
    unarchive: src=/tmp/wordpress.tar.gz dest=/var/www/ copy=no

  - name: update default httpd site
    lineinfile:
      dest: /etc/httpd/conf/httpd.conf
      regexp: "(.)+DocumentRoot /var/www/wordpress"
      line: "DocumentRoot /var/www/wordpress"

  - name: Copy sample config file
    command: mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php creates=/var/www/wordpress/wp-config.php
    become: yes

  - name: Updating the Wordpress config file
    lineinfile:
      path: /var/www/wordpress/wp-config.php
      regexp: "{{item.regexp}}"
      line: "{{item.line}}"
    with_items:
      - {'regexp': "define\\( 'DB_NAME', '(.)+' \\);", 'line': "define( 'DB_NAME', '{{wp_mysql_db}}' );"}
      - {'regexp': "define\\( 'DB_USER', '(.)+' \\);", 'line': "define( 'DB_USER', '{{wp_mysql_user}}' );"}
      - {'regexp': "define\\( 'DB_PASSWORD', '(.)+' \\);", 'line': "define( 'DB_PASSWORD', '{{wp_mysql_password}}' );"}


  - name: restart httpd
    service:
      name: httpd
      state: restarted


